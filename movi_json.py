import random
import json
def json_f():

    filmi={}

    adjectives=[ 'красивая', 'умненькая', 'заботливая', 'привлекательная', 'класная', 'добрая', 'нежная', 'милая', 'очаровательная', 'обворожительная', 'неповторимая', 'душевная', 'незабываемая', 'неотразимая', 'шикарная', 'ослепительная',
    'страстная', 'фантастическая', 'божественная', 'завораживающая', 'ангельская', 'лучезарная', 'Адски', 'божественная', 'яркая', 'отзывчивая', 'обалденная', 'сногсшибательная', 'стройная', 'обольстительная', 'кокетливая',
    'утончённая', 'грациозная', 'весёлая', 'энергичная', 'креативная', 'стильная', 'коммуникабельная', 'тактичная', 'чудесная', 'романтичная', 'разносторонняя', 'сказочная', 'симпатичная', 'невообразимая', 'единственная', 'ласковая', 'сладенькая',
    'умопомрачительная', 'желанная', 'непредсказуемая', 'загадочная', 'интригующая', 'безупречная', 'гармоничная', 'отзывчивая', 'совершенная', 'лучшая', 'скромная', 'изысканная Ангельски', 'прекрасная', 'естественная', 'искренняя',
    'дружелюбная', 'понимающая', 'таинственная', 'мечтательная', 'заманчивая', 'искромётная', 'волнительная', 'манящая', 'бескорыстная', 'непосредственная', 'соблазнительная', 'одурманивающая', 'жизнерадостная',
    'прелестная', 'улыбчивая', 'застенчивая', 'зажигательная', 'честная', 'возбуждающая', 'игривая', 'интригующая', 'обаятельная', 'феерическая', 'целеустремлённая', 'дивная', 'женственная', 'блаженная', 'бесподобная', 'лучезарная',
    'ненаглядная', 'необходимая', 'изумительная', 'сказочная', 'трогательная', 'миниатюрная', 'чарующая', 'самая', 'самая']
    nouns=[ 'аламан', 'андрия', 'апанаж', 'аподия', 'арсола', 'атипия', 'ацидоз', 'байдак', 'барыга', 'блонды', 'буксин', 'бурлак' 'валиде', 'винтёр', 'виуэла', 'волюта', 'вязига', 'гагеит', 'гидрел', 'гонион', 'горчак', 'икорд',
    'дитрих', 'дублер', 'жертва ','затвор', 'зацепа', 'зевота', 'зоанты', 'калтак', 'кеньги', 'киллер', 'клоака', 'клюкваклюфты', 'конунг', 'кормач', 'куприт', 'кюретт', 'лаймад', 'лобзик', 'маклер', 'мелинь', 'минбар ','мщение', 'надрез', 'номант', 'ночник',
    'одежка', 'окенон', 'пезада', 'плероз', 'плодик', 'подтёк', 'понтия', 'притка', 'промен', 'прямая', 'птичка', 'разжог', 'реюшка', 'рюмаха', 'саарец', 'сенсор', 'сикера ','силант ','синьга ','сконто', 'слабый ','сласть', 'солаки', 'статуя', 'талмуд', 'тангор'
    'тартан', 'тмезис', 'трагик', 'трипод', 'триумф', 'тукаши','увечье','улыбка', 'унакит', 'уразин', 'усатый ','фефела', 'флерон', 'фрезия', 'холдем' 'хромой' 'циотан' 'чеглок' 'четник' 'чучело' 'швырок' 'штопор' 'шубища' 'эцидий' 'ямбоза' 'яханга', 'апанаж', 'аподия', 'арсола', 'атипия',
    'дитрих', 'дублер', 'жертва ','затвор', 'зацепа', 'зевота', 'зоанты', 'калтак', 'кеньги', 'киллер', 'клоака', 'клюкваклюфты', 'конунг', 'кормач', 'куприт', 'кюретт', 'лаймад', 'лобзик', 'маклер', 'мелинь', 'минбар ','мщение', 'надрез', 'номант', 'ночник'
    'одежка', 'окенон', 'пезада', 'плероз', 'плодик', 'подтёк', 'понтия', 'притка', 'промен', 'прямая', 'птичка', 'разжог', 'реюшка', 'рюмаха', 'саарец', 'сенсор' ,'сикера ','силант ','синьга ','сконто', 'слабый ','сласть', 'солаки', 'статуя', 'талмуд' ,'тангор'
    'тартан', 'тмезис', 'трагик', 'тукаши','увечье','улыбка', 'унакит', 'уразин', 'усатый ','фефела', 'флерон', 'фрезия', 'холдем' ,'хромой', 'циотан', 'чеглок', 'четник', 'чучело', 'швырок', 'штопор' ,'шубища', 'эцидий']
    genre=["Аниме", 'Биографический', 'Боевик', 'Вестерн', 'Военные', 'Детектив', 'Детские', 'Документальный', 'Драма', 'Исторический', 'Комедия', 'Короткометражный', 'Криминал',
    'Мелодрама', 'Мистика', 'Музыкальный', 'Мультфильм', 'Научно-популярный', 'Нуар', 'Приключения', 'Семейный', 'Спортивный']
    countries_list=['Австрия', 'Азербайджан', 'Албания', 'Алжир' ,'Ангола', 'Андорра' , 'Антигуа и Барбуда', 'Аргентина',' Армения', 'Афганистан', 'Багамы', 'Бангладеш', 'Барбадос', 'Бахрейн' ,'Белоруссия' ,'Белиз', 'Бельгия' ,'Бенин',
    'Болгария' ,'Боливия', 'Босния и Герцеговина', 'Ботсвана', 'Бразилия', 'Бруней', 'Буркина-Фасо', 'Бурунди', 'Бутан' ,'Вануату', 'Великобритания', 'Венгрия', 'Венесуэла', 'Восточный', 'Тимор', 'Вьетнам', 'Габон' ,'Гаити', 'Гайана', 'Гамбия' ,'Гана ',
    'Гватемала' ,'Гвинея' ,'Гвинея-Бисау', 'Германия', 'Гондураc' ,'Гренада' ,'Греция', 'Грузия' ,'Дания', 'Джибути', 'Доминика', 'Доминиканская Республика', 'Египет', 'Замбия', 'Зимбабве', 'Израиль', 'Индия',' Индонезия', 'Иордания' ,'Ирак' ,'Иран']
    id_list1=[]
    id_list2=[]
    list_genre=[]
    list_genre2=[]
    list_countries2=[]
    list_countries=[]
    count=0
    mark=0
    j=0
    itog=[]


    while len(id_list2)<100:
        id_list1.append(random.randint(0,1000))
        id_list2=set(id_list1)
    id_list1=[]
    for i in id_list2:
        while count<10:
            count+=1
            mark+=random.randint(30,100)
        count=0
        mark /= 10
        name_film=adjectives[random.randint(1,100)]+" "+ nouns[random.randint(1,100)]
        year=random.randint(1895,2021)

        count_genre = random.randint(1, 10)
        while len(list_genre2) < count_genre:
            list_genre.append(genre[random.randint(0, 21)])
            list_genre2 = (list_genre)
            print(type(list_genre2))
        count_countries = random.randint(1, 3)
        while len(list_countries2) < count_countries:
            list_countries.append(countries_list[random.randint(1,59)])
            list_countries2 = tuple(set(list_countries))

        filmi[i]=i,name_film,mark,year,list_genre2,list_countries2
        mark=0
        j += 1
        name_film1={"id":i ,"name_film": name_film,"mark":mark,"year":year,"genre":list_genre2,"countries":list_countries2 }
        itog.append(name_film1)

        name_film1={}
        list_genre2=[]
        list_genre=[]
        list_countries2 = []
        list_countries = []

    print(itog)

    # msg=input("enter what you are looking for(year genre country) ")

    # if msg in countries_list:
    #     for value in filmi.values():
    #         if msg in value[5]:
    #             print(value)
    # elif msg in genre:
    #     for value in filmi.values():
    #         if msg in value[4]:
    #             print(value)
    # elif 0<float(msg)<100:
    #     for value in filmi.values():
    #         if float(msg)<value[2]:
    #             print(value)
    # elif 1895<int(msg)<2021:
    #     for value in filmi.values():
    #         if int(msg)==value[3]:
    #             print(value)
    # format_fail=input("enter format (txt csv json)")
    # way=input("enter way")



    # if format_fail=='txt':
    #     full_way=way+"movies.txt"
    #     full_way2=way+"result_movies.txt"
    with open("movi.json", "w", encoding="utf-8") as movi:
        json.dump(itog,movi,indent=2,ensure_ascii=False)

    #
    # for i in filmi.values() :
    #     movies_txt.write((str(i)))
    #     movies_txt.write('\n')
    movi.close()


        # result_movies=open(full_way2, "w", encoding="utf-8")
        # with open(full_way, "r", encoding="utf-8") as file:
        #     for index,line in enumerate(file.readlines()):
        #         i = 0
        #         if ('А'<msg<'Я' or'а'<msg<'я')  and msg in line:
        #             print(line)
        #             result_movies.write(line)
        #         elif str(msg)in line and int(msg)>1500:
        #             print(line)
        #             result_movies.write(line)
        #         elif int(msg)<1000:
        #
        #             for i in range(len(line)):
        #                 if (line[i]).isdigit() and (line[i+1]).isdigit() and (line[i+2])==".":
        #                     x=0
        #                     x = (line[i]) * 10 + (line[i + 1])
        #                     if (msg) < (x):
        #                         result_movies.write(line)
        #                         print(line)
        #                 i+=1


